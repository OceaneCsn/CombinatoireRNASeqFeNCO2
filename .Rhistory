netStats(g)
links <- getLinkList(mat, thr = 0.1)
g <- graph.data.frame(links, directed = F)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1)
links <- getLinkList(mat, thr = 0.07)
g <- graph.data.frame(links, directed = F)
V(net)$is.TF <- ifelse(V(net)$name %in% TF$AGI, 1, 0)
V(g)$is.TF <- ifelse(V(g)$name %in% TF$AGI, 1, 0)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
V(g)$is.TF
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
V(g)$color <- ifelse(V(g)$name %in% TF$AGI, 1, 0)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
netStats(g)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
hist(mat)
links <- getLinkList(mat, thr = 0.07)
g <- graph.data.frame(links, directed = T)
V(g)$color <- ifelse(V(g)$name %in% TF$AGI, 1, 0)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
netStats(g)
g <- graph.data.frame(links, directed = F)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
netStats(g)
g <- graph.data.frame(links, directed = F)
V(g)$color <- ifelse(V(g)$name %in% TF$AGI, 1, 0)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
netStats(g)
V(g)$name
mat2 <- GENIE3(normalized.count, regulators = TF$AGI, targets = sharedBy3 ,treeMethod = "RF", K = "sqrt", nTrees = 1000, nCores = 5,verbose = T)
mat2 <- GENIE3(normalized.count, regulators = unique(TF$AGI), targets = sharedBy3 ,treeMethod = "RF", K = "sqrt", nTrees = 1000, nCores = 5,verbose = T)
mat2 <- GENIE3(normalized.count, regulators = intersect(unique(TF$AGI), rownames(normalized.count)), targets = sharedBy3 ,treeMethod = "RF", K = "sqrt", nTrees = 1000, nCores = 5,verbose = T)
mat <- mat2
hist(mat)
links <- getLinkList(mat, thr = 0.02)
V(g)$color <- ifelse(V(g)$name %in% TF$AGI, 1, 0)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
netStats(g)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
quantile(mat, 0.9)
quantile(mat, 0.1)
quantile(mat, 0.99)
quantile(mat, 0.999)
genie <- function(data, regressors=NA, targets = NA, nTrees=1000, nCores=5){
mat <- GENIE3(data, regulators = intersect(rownames(data),regressors), targets = targets ,treeMethod = "RF", K = "sqrt", nTrees = nTrees, nCores = nCores,verbose = T)
hist(mat)
links <- getLinkList(mat, thr = quantile(mat, 0.999))
g <- graph.data.frame(links, directed = F)
V(g)$color <- ifelse(V(g)$name %in% regressors, 1, 0)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
netStats(g)
}
genie <- function(data, regressors=NA, targets=NA, nTrees=1000, nCores=5){
mat <- GENIE3(data, regulators = intersect(rownames(data),regressors), targets = targets ,treeMethod = "RF", K = "sqrt", nTrees = nTrees, nCores = nCores,verbose = T)
hist(mat)
links <- getLinkList(mat, thr = quantile(mat, 0.999))
g <- graph.data.frame(links, directed = F)
V(g)$color <- ifelse(V(g)$name %in% regressors, 1, 0)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$is.TF)
netStats(g)
}
geneie(normalized.count, regressors = intersect(TF$AGI,sharedBy3), targets = sharedBy3)
genie(normalized.count, regressors = intersect(TF$AGI,sharedBy3), targets = sharedBy3)
load("genesco2Sl.RData")
load("genesIronSl.RData")
load("genesNitrateSl.RData")
load("genesco2At.RData")
load("genesIronAt.RData")
load("genesNitrateAt.RData")
genesco2Sl$factor = "CO2"
genesNitrateSl$factor = "Nitrate"
genesIronSl$factor = "Iron"
dfSl <- rbind(genesco2Sl, genesIronSl, genesNitrateSl)
dfSl$Specie <- "Micro-Tom"
genesco2At$factor = "CO2"
genesNitrateAt$factor = "Nitrate"
genesIronAt$factor = "Iron"
dfAt <- rbind(genesco2At, genesIronAt, genesNitrateAt)
dfAt$Specie <- "A. thaliana"
ggplot(dfAt, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=1, alpha=0.5) +
ggtitle("CO2, Nitrate and Iron effet on gene regulation - A") + scale_fill_discrete("Set2") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor)
suppressMessages(library(TCC, warn.conflicts = F, quietly = T))
#suppressMessages(library(biomartr))
suppressMessages(library(biomaRt))
suppressMessages(library(ggplot2))
suppressMessages(library(org.At.tair.db, warn.conflicts = F, quietly = T))
suppressMessages(library(clusterProfiler, warn.conflicts = F, quietly = T))
suppressMessages(library(enrichplot, warn.conflicts = F, quietly = T))
suppressMessages(library(DESeq2, warn.conflicts = F, quietly = T))
suppressMessages(library(coseq, warn.conflicts = F, quietly = T))
suppressMessages(library(ade4, warn.conflicts = F, quietly = T))
suppressMessages(library(adegraphics, warn.conflicts = F, quietly = T))
suppressMessages(library(RColorBrewer, warn.conflicts = F, quietly = T))
load("genesco2Sl.RData")
load("genesIronSl.RData")
load("genesNitrateSl.RData")
load("genesco2At.RData")
load("genesIronAt.RData")
load("genesNitrateAt.RData")
setwd("~/Documents/CombinatoireFeNCO2/Combinatoire")
load("genesco2Sl.RData")
load("genesIronSl.RData")
load("genesNitrateSl.RData")
load("genesco2At.RData")
load("genesIronAt.RData")
load("genesNitrateAt.RData")
genesco2Sl$factor = "CO2"
genesNitrateSl$factor = "Nitrate"
genesIronSl$factor = "Iron"
dfSl <- rbind(genesco2Sl, genesIronSl, genesNitrateSl)
dfSl$Specie <- "Micro-Tom"
genesco2At$factor = "CO2"
genesNitrateAt$factor = "Nitrate"
genesIronAt$factor = "Iron"
dfAt <- rbind(genesco2At, genesIronAt, genesNitrateAt)
dfAt$Specie <- "A. thaliana"
df <- rbind(dfSl, dfAt)
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie)
a
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
strip.text.x = element_text(size = 8, angle = 90)
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 8, angle = 90))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15)
}
######################## Poisson mixture model for gene clustering on expression
clustering <- function(DEgenes, data, conds="all", nb_clusters = 2:12){
if (length(conds) ==1){
conds = colnames(data)
groups <- str_split_fixed(conds, '_', 2)[,1]
}
dataC <- data[DEgenes,conds]
conds <- str_split_fixed(colnames(dataC), '_', 2)[,1]
run_pois <- coseq(dataC, conds=groups, K=nb_clusters, model="Poisson",iter = 5, transformation = "none")
print(coseq::plot(run_pois, conds = groups, collapse_reps="average", graphs = c("ICL", "boxplots", "profiles", "probapost_barplots")))
summary(run_pois)
clusters_per_genes <- coseq::clusters(run_pois)
return(clusters_per_genes)
}
###################### ACP on gene expression, and visualisation of clusters
ACP <- function(data, clusteredGenes){
acp <- dudi.pca(log(data+0.1), center = TRUE, scale = TRUE, scannf = FALSE, nf = 4)
print(summary(acp))
data$cluster = clusteredGenes[as.vector(rownames(data))]
s.corcircle(acp$co, xax=1, yax=2, fullcircle = FALSE, pback.col = "lightgrey")
adegraphics::s.class(acp$li, xax =  1, yax = 2, as.factor(data$cluster), labels = as.character(levels(as.factor(data$cluster))), col = brewer.pal(n = 10, name = "Paired"), chullSize = 1, ellipseSize = 0, plabels.cex = 0.7, pbackground.col = "grey85", main = "Clusters dans le plan principal", ylim = c(-9, 9))
s.corcircle(acp$co, xax=2, yax=3, fullcircle = FALSE, pback.col = "lightgrey")
adegraphics::s.class(acp$li, xax =  2, yax = 3, as.factor(data$cluster), labels = as.character(levels(as.factor(data$cluster))), col = brewer.pal(n = 10, name = "Paired"), chullSize = 1, ellipseSize = 0, plabels.cex = 0.7, pbackground.col = "grey85", main = "Clusters dans le plan principal")
s.corcircle(acp$co, xax=4, yax=2, fullcircle = FALSE, pback.col = "lightgrey")
adegraphics::s.class(acp$li, xax =  4, yax = 2, as.factor(data$cluster), labels = as.character(levels(as.factor(data$cluster))), col = brewer.pal(n = 10, name = "Paired"), chullSize = 1, ellipseSize = 0, plabels.cex = 0.7, pbackground.col = "grey85", main = "Clusters dans le plan principal")
}
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22))
load("genesco2At.RData")
load("genesIronAt.RData")
load("genesNitrateAt.RData")
genesco2Sl$factor = "CO2"
genesNitrateSl$factor = "Nitrate"
genesIronSl$factor = "Iron"
dfSl <- rbind(genesco2Sl, genesIronSl, genesNitrateSl)
dfSl$Specie <- "Micro-Tom"
genesco2At$factor = "CO2"
genesNitrateAt$factor = "Nitrate"
genesIronAt$factor = "Iron"
dfAt <- rbind(genesco2At, genesIronAt, genesNitrateAt)
dfAt$Specie <- "A. thaliana"
df <- rbind(dfSl, dfAt)
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22))
load("genesco2Sl.RData")
load("genesIronSl.RData")
load("genesNitrateSl.RData")
load("genesco2At.RData")
load("genesIronAt.RData")
load("genesNitrateAt.RData")
genesco2Sl$factor = "CO2"
genesNitrateSl$factor = "Nitrate"
genesIronSl$factor = "Iron"
dfSl <- rbind(genesco2Sl, genesIronSl, genesNitrateSl)
dfSl$Specie <- "Micro-Tom"
genesco2At$factor = "CO2"
genesNitrateAt$factor = "Nitrate"
genesIronAt$factor = "Iron"
dfAt <- rbind(genesco2At, genesIronAt, genesNitrateAt)
dfAt$Specie <- "A. thaliana"
ggplot(dfAt, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=1, alpha=0.5) +
ggtitle("CO2, Nitrate and Iron effet on gene regulation - A") + scale_fill_discrete("Set2") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor)
df <- rbind(dfSl, dfAt)
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation")
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation")
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22),
legend.title = element_text(size = 10))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22),
legend.title = element_text(size = 15))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22),
legend.title = element_text(size = 15), legend.text = element_text(size=15))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22),
legend.title = element_text(size = 15), legend.text = element_text(size=15, labels = c("Down", "Up")))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation") +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22),
legend.title = element_text(size = 15), legend.text = element_text(size=15, text = c("Down", "Up")))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation", labels = c("Down", "Up")) +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22),
legend.title = element_text(size = 15), legend.text = element_text(size=15))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation", labels = c("Down", "Up")) +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22),
legend.title = element_text(size = 15, face="bold"), legend.text = element_text(size=15);
axis.text.y = element_text(size = 15, angle = 40))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation", labels = c("Down", "Up")) +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22),
legend.title = element_text(size = 15, face="bold"), legend.text = element_text(size=15),
axis.text.y = element_text(size = 15, angle = 40))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation", labels = c("Down", "Up")) +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22),
legend.title = element_text(size = 15, face="bold"), legend.text = element_text(size=15),
axis.text.y = element_text(size = 17, angle = 30))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation", labels = c("Down", "Up")) +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 15), plot.title = element_text(size=22),
legend.title = element_text(size = 15, face="bold"), legend.text = element_text(size=15),
axis.text.y = element_text(size = 17, angle = 30), axis.text.x = element_text(size = 12, angle = 30))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation", labels = c("Down", "Up")) +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 16), plot.title = element_text(size=22),
legend.title = element_text(size = 15, face="bold"), legend.text = element_text(size=15),
axis.text.y = element_text(size = 18, angle = 30), axis.text.x = element_text(size = 13, angle = 30))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation", labels = c("Down", "Up")) +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 16), plot.title = element_text(size=22),
legend.title = element_text(size = 15, face="bold"), legend.text = element_text(size=15, face="bold"),
axis.text.y = element_text(size = 18, angle = 30), axis.text.x = element_text(size = 13, angle = 30))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation", labels = c("Down", "Up")) +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 16), plot.title = element_text(size=22, face="bold"),
legend.title = element_text(size = 15, face="bold"), legend.text = element_text(size=15),
axis.text.y = element_text(size = 18, angle = 30), axis.text.x = element_text(size = 13, angle = 30))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation", labels = c("Down", "Up")) +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 16), plot.title = element_text(size=22, face="bold"),
legend.title = element_text(size = 15, face="bold"), legend.text = element_text(size=15),
axis.text.y = element_text(size = 18, angle = 30), axis.text.x = element_text(size = 13, angle = 30),
axis.title=element_text(size=14))
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation", labels = c("Down", "Up")) +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 16), plot.title = element_text(size=22, face="bold"),
legend.title = element_text(size = 15, face="bold"), legend.text = element_text(size=15),
axis.text.y = element_text(size = 18, angle = 30), axis.text.x = element_text(size = 13, angle = 30),
axis.title=element_text(size=17))
load("genesco2Sl.RData")
load("genesIronSl.RData")
load("genesNitrateSl.RData")
load("genesco2At.RData")
load("genesIronAt.RData")
load("genesNitrateAt.RData")
genesco2Sl$factor = "CO2"
genesNitrateSl$factor = "Nitrate"
genesIronSl$factor = "Iron"
dfSl <- rbind(genesco2Sl, genesIronSl, genesNitrateSl)
dfSl$Specie <- "Micro-Tom"
genesco2At$factor = "CO2"
genesNitrateAt$factor = "Nitrate"
genesIronAt$factor = "Iron"
dfAt <- rbind(genesco2At, genesIronAt, genesNitrateAt)
dfAt$Specie <- "A. thaliana"
df <- rbind(dfSl, dfAt)
ggplot(df, aes(fill=reg, y=value, x=variable)) +
geom_bar(position="stack", stat="identity", size=0.3, alpha=0.5, color = "black") +
ggtitle("CO2, Nitrate and Iron effet on gene regulation") + scale_fill_discrete(name = "Regulation", labels = c("Down", "Up")) +
xlab("") + ylab("Number of differentially expressed genes") + coord_flip() + facet_grid(~ factor + Specie) +
theme(strip.text.x = element_text(size = 16), plot.title = element_text(size=22, face="bold"),
legend.title = element_text(size = 15, face="bold"), legend.text = element_text(size=15),
axis.text.y = element_text(size = 18, angle = 30), axis.text.x = element_text(size = 13, angle = 30),
axis.title=element_text(size=17))
library(knitr, warn.conflicts = F, quietly = T)
library(rmdformats, warn.conflicts = F, quietly = T)
## Global options
options(max.print="75")
opts_chunk$set(cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
fig.align = "center")
opts_knit$set(width=75)
#setwd("~/Documents/CombinatoireFeNCO2/Combinatoire/")
setwd("./")
library(gridExtra)
library(reshape2)
library(PLNmodels)
library(corrplot)
suppressMessages(library(gridExtra, warn.conflicts = F, quietly = T))
suppressMessages(library(stringr, warn.conflicts = F, quietly = T))
suppressMessages(library(ggpubr, warn.conflicts = F, quietly = T))
suppressMessages(library(ggplot2, warn.conflicts = F, quietly = T))
suppressMessages(library(clusterProfiler, warn.conflicts = F, quietly = T))
suppressMessages(library(enrichplot, warn.conflicts = F, quietly = T))
suppressMessages(library(ggpubr, warn.conflicts = F, quietly = T))
suppressMessages(library(psych, warn.conflicts = F, quietly = T))
suppressMessages(library(igraph, warn.conflicts = F, quietly = T))
#self written functions for differential expression
source("./DEFunctions.R")
source("./Network_functions.R")
specie = "At"
load(paste0("./GenesCO2_",specie,".RData"))
load("./normalized.count_At.RData")
#quantification file
data <- read.csv("quantifFiles/QuantifGenes.csv", h = T, sep = ',')
rownames(data) <- data$Gene
genes = which(!(grepl("__", rownames(data))))
not_quant = data[which((grepl("__", rownames(data)))),]
data = data[genes,grepl('R', colnames(data))]
keep <- rowSums(data) >= 10
data <- data[keep,]
group <- sapply(colnames(data), getLabel, with.rep = F)
colnames(data) <- sapply(colnames(data), getLabel)
specie = "At"
net_norm <- PLN_network(data = data, DEGenes = sharedBy3)
library(knitr, warn.conflicts = F, quietly = T)
library(rmdformats, warn.conflicts = F, quietly = T)
## Global options
options(max.print="75")
opts_chunk$set(cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
fig.align = "center")
opts_knit$set(width=75)
#setwd("~/Documents/CombinatoireFeNCO2/Combinatoire/")
setwd("./")
library(reshape2)
library(PLNmodels)
library(corrplot)
suppressMessages(library(gridExtra, warn.conflicts = F, quietly = T))
suppressMessages(library(stringr, warn.conflicts = F, quietly = T))
suppressMessages(library(ggpubr, warn.conflicts = F, quietly = T))
suppressMessages(library(ggplot2, warn.conflicts = F, quietly = T))
suppressMessages(library(ggpubr, warn.conflicts = F, quietly = T))
suppressMessages(library(psych, warn.conflicts = F, quietly = T))
suppressMessages(library(igraph, warn.conflicts = F, quietly = T))
#self written functions for differential expression
source("./DEFunctions.R")
source("./Network_functions.R")
specie = "At"
load(paste0("./GenesCO2_",specie,".RData"))
load("./normalized.count_At.RData")
#quantification file
data <- read.csv("quantifFiles/QuantifGenes.csv", h = T, sep = ',')
rownames(data) <- data$Gene
genes = which(!(grepl("__", rownames(data))))
not_quant = data[which((grepl("__", rownames(data)))),]
data = data[genes,grepl('R', colnames(data))]
keep <- rowSums(data) >= 10
data <- data[keep,]
group <- sapply(colnames(data), getLabel, with.rep = F)
colnames(data) <- sapply(colnames(data), getLabel)
specie = "At"
clusteredGenes <- clustering(sharedBy3, data)
DEgenes <- sharedBy3
conds="all"
if (length(conds) ==1){
conds = colnames(data)
groups <- str_split_fixed(conds, '_', 2)[,1]
}
dataC <- data[DEgenes,conds]
conds <- str_split_fixed(colnames(dataC), '_', 2)[,1]
run_pois <- coseq(dataC, conds=groups, K=nb_clusters, model="Poisson",iter = 5, transformation = "none")
nb_clusters = 2:12
run_pois <- coseq(dataC, conds=groups, K=nb_clusters, model="Poisson",iter = 5, transformation = "none")
View(run_pois)
View(run_pois)
net_norm <- PLN_network(data = data, DEGenes = sharedBy3)
V(net_norm)$color <- clusteredGenes[V(net_norm)]
plot.igraph(net_norm, vertex.size = 10, vertex.label.cex = 0.5, edge.width = 0.5)
Node_nw_st_pln <- netStats(net_norm)
length(E(net_norm))
TF <- read.table("TFs_PlnTFDB.txt", h=T, sep = '\t')
TF <- read.table("TFs_PlnTFDB.txt", h=T, sep = '\t')
TF$AGI <- str_split_fixed(TF$Protein.ID, '\\.', 2)[,1]
genie(normalized.count, regressors = intersect(TF$AGI,sharedBy3), targets = sharedBy3)
genie <- function(data, regressors=NA, targets=NA, nTrees=1000, nCores=5, thr = 0.3){
mat <- GENIE3(data, regulators = intersect(rownames(data),regressors), targets = targets ,treeMethod = "RF", K = "sqrt", nTrees = nTrees, nCores = nCores,verbose = T)
hist(mat)
links <- getLinkList(mat, thr = thr)
g <- graph.data.frame(links, directed = F)
V(g)$color <- ifelse(V(g)$name %in% regressors, 1, 0)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$color)
netStats(g)
}
genie(normalized.count, regressors = intersect(TF$AGI,sharedBy3), targets = sharedBy3)
for(thr in seq(0.2,0.39, by = 0.05)){
genie(normalized.count, regressors = intersect(TF$AGI,sharedBy3), targets = sharedBy3, thr = thr)
}
for(thr in seq(0.05,0.39, by = 0.05)){
genie(normalized.count, regressors = intersect(TF$AGI,sharedBy3), targets = sharedBy3, thr = thr)
}
library(visNetwork)
data <- toVisNetworkData(net)
net <- genie(normalized.count, regressors = intersect(TF$AGI,sharedBy3), targets = sharedBy3)
data <- toVisNetworkData(net)
genie <- function(data, regressors=NA, targets=NA, nTrees=1000, nCores=5, thr = 0.3){
mat <- GENIE3(data, regulators = intersect(rownames(data),regressors), targets = targets ,treeMethod = "RF", K = "sqrt", nTrees = nTrees, nCores = nCores,verbose = T)
hist(mat)
links <- getLinkList(mat, thr = thr)
g <- graph.data.frame(links, directed = F)
V(g)$color <- ifelse(V(g)$name %in% regressors, 1, 0)
plot.igraph(g, vertex.size=5, vertex.label.cex=0.1, color = V(g)$color)
netStats(g)
return(g)
}
net <- genie(normalized.count, regressors = intersect(TF$AGI,sharedBy3), targets = sharedBy3, thr = 0.3)
net <- genie(normalized.count, regressors = intersect(TF$AGI,sharedBy3), targets = sharedBy3, thr = 0.25)
data <- toVisNetworkData(net)
visNetwork(nodes = data$nodes, edges = data$edges, height = "500px", width = "100%") %>%
visEdges(smooth = FALSE) %>% visPhysics(solver = "forceAtlas2Based", timestep = 1, minVelocity=10, maxVelocity = 10, stabilization = F)
data <- toVisNetworkData(net_norm)
visNetwork(nodes = data$nodes, edges = data$edges, height = "500px", width = "100%") %>%
visEdges(smooth = FALSE) %>% visPhysics(solver = "forceAtlas2Based", timestep = 1, minVelocity=10, maxVelocity = 10, stabilization = F)
V(net)$color <- clusteredGenes[V(net)]
data <- toVisNetworkData(net)
visNetwork(nodes = data$nodes, edges = data$edges, height = "500px", width = "100%") %>%
visEdges(smooth = FALSE) %>% visPhysics(solver = "forceAtlas2Based", timestep = 1, minVelocity=10, maxVelocity = 10, stabilization = F)
