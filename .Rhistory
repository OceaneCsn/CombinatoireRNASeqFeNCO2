theme_grey(base_size = base_size)  +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(axis.text.x = element_text(size = base_size *  1.2, angle = 320,
hjust = 0, colour = "grey50"), plot.title = element_text( size = 14, face = "bold")) + geom_text(aes(label = round(value, 3)))
172/24
211/24
library(ggplot2)
library(gridExtra)
setwd("~/Documents/Combinatoire/")
data <- read.csv("LogsData.csv", h=T, sep = ',')
um <- ggplot(data, aes(x=UM))+
geom_density(color="darkblue", fill="lightblue", alpha=0.4) +
ggtitle("Uniquely mapped reads") + coord_cartesian(xlim=c(80, 100))
mm <- ggplot(data, aes(x=MM))+
geom_density(color="darkred", fill="red", alpha=0.4) +
ggtitle("Multi-mapped reads") +coord_cartesian(xlim=c(1, 2))
reads <- ggplot(data, aes(x=MappedReads))+
geom_density(color="darkgreen", fill="green", alpha=0.4) +
ggtitle("Sequencing depth")
grid.arrange(um, mm, reads, ncol = 3)
um <- ggplot(data, aes(x=UM))+
geom_density(color="darkblue", fill="lightblue", alpha=0.4) +
ggtitle("Uniquely mapped reads") + coord_cartesian(xlim=c(80, 100))
mm <- ggplot(data, aes(x=MM))+
geom_density(color="darkred", fill="red", alpha=0.4) +
ggtitle("Multi-mapped reads") +coord_cartesian(xlim=c(0.5, 2))
reads <- ggplot(data, aes(x=MappedReads))+
geom_density(color="darkgreen", fill="green", alpha=0.4) +
ggtitle("Sequencing depth")
grid.arrange(um, mm, reads, ncol = 3)
library(reshape2)
melted_res <- melt(data[c("MM", "UM")])
p<-ggplot(melted_res, aes(x=value, fill=variable)) +
geom_density(alpha=0.4)
p
ggplot(data, aes(x=UM))+
geom_density(color="darkblue", fill="lightblue", alpha=0.4) +
ggtitle("Uniquely mapped reads") + coord_cartesian(xlim=c(80, 100))
um <- ggplot(data, aes(x=UM))+
geom_density(color="darkblue", fill="lightblue", alpha=0.4) +
ggtitle("Uniquely mapped reads") + coord_cartesian(xlim=c(80, 100))
mm <- ggplot(data, aes(x=MM))+
geom_density(color="darkred", fill="red", alpha=0.4) +
ggtitle("Multi-mapped reads") +coord_cartesian(xlim=c(0.5, 2))
reads <- ggplot(data, aes(x=MappedReads))+
geom_density(color="darkgreen", fill="green", alpha=0.4) +
ggtitle("Sequencing depth")
grid.arrange(um, mm, reads, ncol = 3)
um <- ggplot(data, aes(x=UM))+
geom_boxplot(color="darkblue", fill="lightblue", alpha=0.4) +
ggtitle("Uniquely mapped reads") + coord_cartesian(xlim=c(80, 100))
mm <- ggplot(data, aes(x=MM))+
geom_boxplot(color="darkred", fill="red", alpha=0.4) +
ggtitle("Multi-mapped reads") +coord_cartesian(xlim=c(0.5, 2))
reads <- ggplot(data, aes(x=MappedReads))+
geom_boxplot(color="darkgreen", fill="green", alpha=0.4) +
ggtitle("Sequencing depth")
grid.arrange(um, mm, reads, ncol = 3)
ggplot(data, aes(x=MM))+
geom_boxplot(aes(x=MM), color="darkred", fill="red", alpha=0.4) +
ggtitle("Multi-mapped reads") +coord_cartesian(xlim=c(0.5, 2))
p<-ggplot(melted_res, aes(x=value, fill=variable)) +
geom_boxplot(alpha=0.4, group = variable)
p
library(reshape2)
melted_res <- melt(data[c("MM", "UM")])
p<-ggplot(melted_res, aes(x=value, fill=variable)) +
geom_boxplot(alpha=0.4, group = variable)
p<-ggplot(melted_res, aes(x=value, fill=variable)) +
geom_boxplot(alpha=0.4)
p
p<-ggplot(melted_res, aes(x=value, fill=variable)) +
geom_boxplot(alpha=0.4, aes(x=value, fill=variable))
p
p<-ggplot(melted_res, aes(x=variable, y = value, fill=variable)) +
geom_boxplot(alpha=0.4)
p
p<-ggplot(melted_res, aes(x=variable, y = value, fill=variable)) +
geom_violin(alpha=0.4)
p
p<-ggplot(melted_res, aes(x=variable, y = value, fill=variable)) +
geom_violin(alpha=0.4) + labs(title="Mapped reads for the 24 At RNASeq samples",x="", y = "% of reads")
p
um <- ggplot(data, aes(x=UM))+
geom_density(color="darkblue", fill="lightblue", alpha=0.4) +
ggtitle("Uniquely mapped reads") + coord_cartesian(xlim=c(80, 100))
mm <- ggplot(data, aes(x=MM))+
geom_density(color="darkred", fill="red", alpha=0.4) +
ggtitle("Multi-mapped reads") +coord_cartesian(xlim=c(0.5, 2))
reads <- ggplot(data, aes(x=MappedReads))+
geom_density(color="darkgreen", fill="green", alpha=0.4) +
ggtitle("Sequencing depth")
grid.arrange(um, mm, reads, ncol = 3)
p<-ggplot(melted_res, aes(x=variable, y = value, fill=variable)) +
geom_violin(alpha=0.4) + labs(title="Mapped reads for the 24 At RNASeq samples",x="", y = "% of reads")
p
library(knitr, warn.conflicts = F, quietly = T)
library(rmdformats, warn.conflicts = F, quietly = T)
## Global options
options(max.print="75")
opts_chunk$set(cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
fig.align = "center")
opts_knit$set(width=75)
setwd("~/Documents/RNADifferentialAnalysis/DifferentialExpressionAnalysis/")
suppressMessages(library(ggplot2))
suppressMessages(library(coseq))
suppressMessages(library(dplyr, warn.conflicts = F, quietly = T))
suppressMessages(library(ade4, warn.conflicts = F, quietly = T))
suppressMessages(library(adegraphics, warn.conflicts = F, quietly = T))
suppressMessages(library(clusterProfiler, warn.conflicts = F, quietly = T))
suppressMessages(library(rlist, warn.conflicts = F, quietly = T))
data <- read.csv("quantif_At.csv", h = T, sep = ',')
View(data)
row.names(data) <- data$Gene
data = t(data)
View(data)
View(data)
head(data)
head(data[1:10, 1:10])
data <- read.csv("quantif_At.csv", h = T, sep = ',')
data = t(data)
head(data[1:10, 1:10])
data <- read.csv("quantif_At.csv", h = T, sep = ',')
annot <- read.csv("quantif_At.csv", h = T, sep = ',')
annot <- read.csv("Code_for_RNAseq_CO2_N_Fr.csv", h = T, sep = ',')
View(annot)
annot <- read.csv("Code_for_RNAseq_CO2_N_Fr.csv", h = T, sep = ';')
View(annot)
conditions <- unique(annot$Sample)
conditions <- as.vector(unique(annot$Sample))
conditions
cond <- substr(conditions, 1, nchar(conditions)-1)
cond <- unique(substr(conditions, 1, nchar(conditions)-1))
cond <- grepl("At", cond)
cond <- cond[grepl("At", cond)]
cond <- unique(substr(conditions, 1, nchar(conditions)-1))
cond <- cond[grepl("At", cond)]
cond
annot <- read.csv("Code_for_RNAseq_CO2_N_Fr.csv", h = T, sep = ';')
conditions <- as.vector(unique(annot$Sample))
annot$condition <- substr(conditions, 1, nchar(conditions)-1)
View(annot)
for(co in cond){
samples <- annot[annot$condition == cond,]$Code
}
tail(cond)
annot[annot$condition == cond,]$Code
annot$condition
annot[annot$condition == cond,]
annot[annot$condition == cond,]
annot$condition == cond
cond
for(co in cond){
samples <- annot[annot$condition == co,]$Code
}
paste0("R", samples)
df <- data[,paste0("R", samples)]
scatter <- function(df, x, y){
sp <- ggplot(df, aes(x=x, y=y)) +
geom_point()
sp + geom_density_2d()
}
scatter(df, "R22", "R23")
scatter <- function(df, x, y){
sp <- ggplot(df, aes(x=x, y=y)) +
geom_point()
return(sp )
}
scatter(df, "R22", "R23")
scatter <- function(df, x, y){
sp <- ggplot(df, aes(x=df[,x], df[,y])) +
geom_point()
return(sp )
}
scatter <- function(df, x, y){
scatter(df, "R22", "R23")
scatter <- function(df, x, y){
sp <- ggplot(df, aes(x=df[,x], df[,y])) + geom_bin2d()
return(sp)
}
scatter(df, "R22", "R23")
ggpairs(df, columns=1:3)
install.packages("GGally")
suppressMessages(library(GGally, warn.conflicts = F, quietly = T))
ggpairs(df, columns=1:3)
a <- ggpairs(df, columns=1:3)
a
ggplot(df, aes(R22, R23)) + geom_bin2d()
scatter(df$R22, df$R23)
head(df)
genes = which(!(grepl("__", rownames(data))))
data = data[genes,]
annot <- read.csv("Code_for_RNAseq_CO2_N_Fr.csv", h = T, sep = ';')
conditions <- as.vector(unique(annot$Sample))
annot$condition <- substr(conditions, 1, nchar(conditions)-1)
cond <- unique(substr(conditions, 1, nchar(conditions)-1))
cond <- cond[grepl("At", cond)]
scatter <- function(df, x, y){
sp <- ggplot(df, aes(R22, R23)) + geom_bin2d()
return(sp)
}
for(co in cond){
samples <- annot[annot$condition == co,]$Code
df <- data[,paste0("R", samples)]
}
ggplot(df, aes(R22, R23)) + geom_bin2d()
tail(genes)
rownames(data) <- data$Gene
genes = which(!(grepl("__", rownames(data))))
data = data[genes,]
annot <- read.csv("Code_for_RNAseq_CO2_N_Fr.csv", h = T, sep = ';')
conditions <- as.vector(unique(annot$Sample))
annot$condition <- substr(conditions, 1, nchar(conditions)-1)
cond <- unique(substr(conditions, 1, nchar(conditions)-1))
cond <- cond[grepl("At", cond)]
scatter <- function(df, x, y){
sp <- ggplot(df, aes(R22, R23)) + geom_bin2d()
return(sp)
}
for(co in cond){
samples <- annot[annot$condition == co,]$Code
df <- data[,paste0("R", samples)]
}
ggplot(df, aes(R22, R23)) + geom_bin2d()
scatter <- function(df, x, y){
sp <- ggplot(log(df), aes(R22, R23)) + geom_bin2d()
return(sp)
}
ggplot(log(df), aes(R22, R23)) + geom_bin2d()
ggplot(log(df), aes(R22, R23)) + geom_bin2d(bins = 40)
ggplot(log(df), aes(R22, R23)) + geom_bin2d(bins = 50)
ggplot(log(df), aes(R22, R23)) + geom_bin2d(bins = 60)
ggplot(log(df), aes(R22, R23)) + geom_point()
ggplot(log(df), aes(R22, R23)) + geom_point(alpha = 0.2)
ggplot(log(df), aes(R22, R23)) + geom_bin2d(bins = 60) + scale_fill_brewer(palette="Purples")
ggplot(log(df), aes(R22, R23)) + geom_bin2d(bins = 60) + scale_fill_gradient2()
ggplot(log(df), aes(R22, R23)) + geom_bin2d(bins = 70) + scale_fill_gradient2()
scatter <- function(df, x, y){
sp <- ggplot(log(df), aes(df[,x], df[,x])) + geom_bin2d(bins = 70) + scale_fill_gradient2()
return(sp)
}
scatter(df, "R22", "R24")
scatter(df, "R22", "R23")
scatter <- function(df, x, y){
sp <- ggplot(log(df), aes(df[,x], df[,y])) + geom_bin2d(bins = 70) + scale_fill_gradient2()
return(sp)
}
scatter(df, "R22", "R24")
scatter(df, "R22", "R23")
scatter <- function(df, x, y){
sp <- ggplot(log(df), aes(df[x], df[y])) + geom_bin2d(bins = 70) + scale_fill_gradient2()
return(sp)
}
scatter(df, "R22", "R23")
scatter <- function(df, x, y){
sp <- ggplot(log(df), aes(df[,x], df[,y])) + geom_bin2d(bins = 70) + scale_fill_gradient2()
return(sp)
}
scatter(df, "R22", "R23")
ggplot(log(df), aes(df[,x], df[,y])) + geom_bin2d(bins = 70) + scale_fill_gradient2()
ggplot(log(df), aes(df[,"R22"], df[,"R23"])) + geom_bin2d(bins = 70) + scale_fill_gradient2()
ggplot(df, aes(df[,"R22"], df[,"R23"])) + geom_bin2d(bins = 70) + scale_fill_gradient2()
ggplot(log(df), aes(df[,"R22"], df[,"R23"])) + geom_bin2d(bins = 70) + scale_fill_gradient2()
ggplot(df, aes(log(df[,"R22"]), log(df[,"R23"]))) + geom_bin2d(bins = 70) + scale_fill_gradient2()
scatter <- function(df, x, y){
sp <- ggplot(df, aes(log(df[,x]), log(df[,y]))) + geom_bin2d(bins = 70) + scale_fill_gradient2()
return(sp)
}
scatter(df, "R22", "R23")
scatter(df, "R22", "R24")
a <- scatter(df, sample[1], sample[2])
b <- scatter(df, sample[1], sample[3])
c <- scatter(df, sample[2], sample[3])
grid.arrange(a,b,c, ncol = 3)
c
a
samples <- annot[annot$condition == co,]$Code
df <- data[,paste0("R", samples)]
a <- scatter(df, sample[1], sample[2])
b <- scatter(df, sample[1], sample[3])
c <- scatter(df, sample[2], sample[3])
a
samples <- annot[annot$condition == co,]$Code
df <- data[,paste0("R", samples)]
a <- scatter(df, samples[1], samples[2])
b <- scatter(df, samples[1], samples[3])
c <- scatter(df, samples[2], samples[3])
grid.arrange(a,b,c, ncol = 3)
c
head(df)
a <- scatter(df, samples[1], samples[2])
a
samples[1]
samples <- paste0("R",annot[annot$condition == co,]$Code)
df <- data[,samples]
a <- scatter(df, samples[1], samples[2])
b <- scatter(df, samples[1], samples[3])
c <- scatter(df, samples[2], samples[3])
grid.arrange(a,b,c, ncol = 3)
a
b
c
grid.arrange(a,b,c, ncol = 3)
grid.arrange(a,b,c)
grid.arrange(a,b,c, ncol = 3)
scatter <- function(df, x, y){
sp <- ggplot(df, aes(log(df[,x]), log(df[,y]))) + geom_bin2d(bins = 70) + scale_fill_gradient2() + theme(legend.position = "none")
return(sp)
}
samples <- paste0("R",annot[annot$condition == co,]$Code)
df <- data[,samples]
a <- scatter(df, samples[1], samples[2])
b <- scatter(df, samples[1], samples[3])
c <- scatter(df, samples[2], samples[3])
grid.arrange(a,b,c, ncol = 3)
grid.arrange(a,b,c, ncol = 3)
data <- read.csv("quantif_At.csv", h = T, sep = ',')
rownames(data) <- data$Gene
genes = which(!(grepl("__", rownames(data))))
data = data[genes,]
#row.names(data) <- data$Gene
annot <- read.csv("Code_for_RNAseq_CO2_N_Fr.csv", h = T, sep = ';')
conditions <- as.vector(unique(annot$Sample))
annot$condition <- substr(conditions, 1, nchar(conditions)-1)
cond <- unique(substr(conditions, 1, nchar(conditions)-1))
cond <- cond[grepl("At", cond)]
scatter <- function(df, x, y){
sp <- ggplot(df, aes(log(df[,x]), log(df[,y]))) + geom_bin2d(bins = 70) + scale_fill_gradient2() + theme(legend.position = "none")
return(sp)
}
for(co in cond){
samples <- paste0("R",annot[annot$condition == co,]$Code)
df <- data[,samples]
a <- scatter(df, samples[1], samples[2])
b <- scatter(df, samples[1], samples[3])
c <- scatter(df, samples[2], samples[3])
grid.arrange(a,b,c, ncol = 3)
}
scatter(data, "R1", "R22")
annot <- read.csv("Code_for_RNAseq_CO2_N_Fr.csv", h = T, sep = ';')
conditions <- as.vector(unique(annot$Sample))
annot$condition <- substr(conditions, 1, nchar(conditions)-1)
cond <- unique(substr(conditions, 1, nchar(conditions)-1))
cond <- cond[grepl("At", cond)]
cor_diff <- c()
cor_same <- c()
scatter <- function(df, x, y){
sp <- ggplot(df, aes(log(df[,x]), log(df[,y]))) + geom_bin2d(bins = 70) + scale_fill_gradient2() + theme(legend.position = "none") + labs(x = x, y = y)
return(sp)
}
for(co in cond){
print(co)
samples <- paste0("R",annot[annot$condition == co,]$Code)
df <- data[,samples]
a <- scatter(df, samples[1], samples[2])
b <- scatter(df, samples[1], samples[3])
c <- scatter(df, samples[2], samples[3])
grid.arrange(a,b,c, ncol = 3)
cor_same <- c(cor_same, cor(samples[1], samples[2]), cor(samples[1], samples[3]),
cor(samples[2], samples[3]))
other <- paste0("R",annot[annot$condition != co,]$Code)
for(o in other){
cor_diff <- c(cor_diff, cor(data[,o], df[, samples[1]]))
}
}
annot <- read.csv("Code_for_RNAseq_CO2_N_Fr.csv", h = T, sep = ';')
conditions <- as.vector(unique(annot$Sample))
annot$condition <- substr(conditions, 1, nchar(conditions)-1)
cond <- unique(substr(conditions, 1, nchar(conditions)-1))
cond <- cond[grepl("At", cond)]
cor_diff <- c()
cor_same <- c()
scatter <- function(df, x, y){
sp <- ggplot(df, aes(log(df[,x]), log(df[,y]))) + geom_bin2d(bins = 70) + scale_fill_gradient2() + theme(legend.position = "none") + labs(x = x, y = y)
return(sp)
}
for(co in cond){
print(co)
samples <- paste0("R",annot[annot$condition == co,]$Code)
df <- data[,samples]
a <- scatter(df, samples[1], samples[2])
b <- scatter(df, samples[1], samples[3])
c <- scatter(df, samples[2], samples[3])
grid.arrange(a,b,c, ncol = 3)
cor_same <- c(cor_same, cor(df[, samples[1]], df[, samples[2]]),
cor(df[, samples[1]], df[, samples[3]]),
cor(df[, samples[2]], df[, samples[3]]))
other <- paste0("R",annot[annot$condition != co,]$Code)
for(o in other){
cor_diff <- c(cor_diff, cor(data[,o], df[, samples[1]]))
}
}
annot <- read.csv("Code_for_RNAseq_CO2_N_Fr.csv", h = T, sep = ';')
conditions <- as.vector(unique(annot$Sample))
annot$condition <- substr(conditions, 1, nchar(conditions)-1)
cond <- unique(substr(conditions, 1, nchar(conditions)-1))
cond <- cond[grepl("At", cond)]
cor_diff <- c()
cor_same <- c()
scatter <- function(df, x, y){
sp <- ggplot(df, aes(log(df[,x]), log(df[,y]))) + geom_bin2d(bins = 70) + scale_fill_gradient2() + theme(legend.position = "none") + labs(x = x, y = y)
return(sp)
}
for(co in cond){
print(co)
samples <- paste0("R",annot[annot$condition == co,]$Code)
df <- data[,samples]
a <- scatter(df, samples[1], samples[2])
b <- scatter(df, samples[1], samples[3])
c <- scatter(df, samples[2], samples[3])
grid.arrange(a,b,c, ncol = 3)
cor_same <- c(cor_same, cor(df[, samples[1]], df[, samples[2]]),
cor(df[, samples[1]], df[, samples[3]]),
cor(df[, samples[2]], df[, samples[3]]))
other <- paste0("R",annot[annot$condition != co,]$Code)
print(other)
for(o in other){
cor_diff <- c(cor_diff, cor(data[,o], df[, samples[1]]))
}
}
data$R4
annot <- read.csv("Code_for_RNAseq_CO2_N_Fr.csv", h = T, sep = ';')
conditions <- as.vector(unique(annot$Sample))
annot$condition <- substr(conditions, 1, nchar(conditions)-1)
cond <- unique(substr(conditions, 1, nchar(conditions)-1))
cond <- cond[grepl("At", cond)]
cor_diff <- c()
cor_same <- c()
scatter <- function(df, x, y){
sp <- ggplot(df, aes(log(df[,x]), log(df[,y]))) + geom_bin2d(bins = 70) + scale_fill_gradient2() + theme(legend.position = "none") + labs(x = x, y = y)
return(sp)
}
for(co in cond){
print(co)
samples <- paste0("R",annot[annot$condition == co,]$Code)
df <- data[,samples]
a <- scatter(df, samples[1], samples[2])
b <- scatter(df, samples[1], samples[3])
c <- scatter(df, samples[2], samples[3])
grid.arrange(a,b,c, ncol = 3)
cor_same <- c(cor_same, cor(df[, samples[1]], df[, samples[2]]),
cor(df[, samples[1]], df[, samples[3]]),
cor(df[, samples[2]], df[, samples[3]]))
other <- paste0("R",annot[annot$condition != co,]$Code)
print(other)
for(o in other){
print(data[,o])
cor_diff <- c(cor_diff, cor(data[,o], df[, samples[1]]))
}
}
annot <- read.csv("Code_for_RNAseq_CO2_N_Fr.csv", h = T, sep = ';')
conditions <- as.vector(unique(annot$Sample))
annot$condition <- substr(conditions, 1, nchar(conditions)-1)
cond <- unique(substr(conditions, 1, nchar(conditions)-1))
cond <- cond[grepl("At", cond)]
cor_diff <- c()
cor_same <- c()
scatter <- function(df, x, y){
sp <- ggplot(df, aes(log(df[,x]), log(df[,y]))) + geom_bin2d(bins = 70) + scale_fill_gradient2() + theme(legend.position = "none") + labs(x = x, y = y)
return(sp)
}
for(co in cond){
print(co)
samples <- paste0("R",annot[annot$condition == co,]$Code)
df <- data[,samples]
a <- scatter(df, samples[1], samples[2])
b <- scatter(df, samples[1], samples[3])
c <- scatter(df, samples[2], samples[3])
grid.arrange(a,b,c, ncol = 3)
cor_same <- c(cor_same, cor(df[, samples[1]], df[, samples[2]]),
cor(df[, samples[1]], df[, samples[3]]),
cor(df[, samples[2]], df[, samples[3]]))
other <- paste0("R",annot[annot$condition != co & ! grepl("Sl",annot$Sample),]$Code)
print(other)
for(o in other){
print(data[,o])
cor_diff <- c(cor_diff, cor(data[,o], df[, samples[1]]))
}
}
hist(cor_diff)
hist(cor_diff, bins = 40)
hist(cor_same, bins = 40)
hist(cor_diff, bins = 40)
cors = data.frame("Diff" = cor_diff, "Same" = cor_same)
View(cors)
cors <- melt(cors)
scatter(data, "R1", "R22")
cors = data.frame("Diff" = cor_diff, "Same" = cor_same)
library(reshape2)
cors <- melt(cors)
p<-ggplot(cors, aes(x=value,  fill=variable)) +
geom_density(alpha=0.4)
p
scatter(data, "R1", "R22")
cors = data.frame("Different conditions" = cor_diff, "Same conditions" = cor_same)
library(reshape2)
cors <- melt(cors)
p<-ggplot(cors, aes(x=value,  fill=variable)) +
geom_density(alpha=0.4)
p
p<-ggplot(cors, aes(x=value,  fill=variable)) +
geom_density(alpha=0.4) + ggtitle("Distribution des corrélations entre les réplicats")
p
p<-ggplot(cors, aes(x=value,  fill=variable)) +
geom_density(alpha=0.4) + ggtitle("Distribution des corrélations entre les réplicats, biologiques ou non")
p
